{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../actions/dashboard';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\nimport register from '../../reducers/register';\n\nconst Dashboard = ({\n  getUserInfo,\n  user\n}) => {\n  useEffect(() => {\n    getUserInfo();\n  }, [getUserInfo]); // console.log(props.userReview);\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, user.dashLoading && auth.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"LOADING...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, user.userEmail)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    // isAuthenticated: state.register.isAuthenticated,\n    auth: state.register,\n    //From dashboard state\n    user: state.dashboard // userUniversity: state.dashboard.university,\n    // userReview: state.dashboard.review[0]\n\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserInfo\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","connect","getUserInfo","PropTypes","Review","register","Dashboard","user","dashLoading","auth","loading","userEmail","mapStateToProps","state","dashboard","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA,WAAF;AAAeK,EAAAA;AAAf,CAAD,KAA2B;AAEzCR,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CAFyC,CAMzC;;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMK,IAAI,CAACC,WAAL,IAAoBC,IAAI,CAACC,OAAzB,gBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADkC,CAApC,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,SAAT,CAFC,CAJT,CADJ;AAcH,CAtBD;;AAwBA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH;AACA;AACAJ,IAAAA,IAAI,EAAEI,KAAK,CAACR,QAHT;AAIH;AACAE,IAAAA,IAAI,EAAEM,KAAK,CAACC,SALT,CAMH;AACA;;AAPG,GAAP;AASH,CAVD;;AAYAR,SAAS,CAACS,SAAV,GAAsB;AAClBb,EAAAA,WAAW,EAAEC,SAAS,CAACa,IAAV,CAAeC;AADV,CAAtB;AAKA,eAAehB,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA0CI,SAA1C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/dashboard';\r\nimport PropTypes from 'prop-types';\r\nimport Review from './Review';\r\nimport register from '../../reducers/register';\r\n\r\nconst Dashboard = ({ getUserInfo, user }) => {\r\n\r\n    useEffect(() => {\r\n        getUserInfo();\r\n    }, [getUserInfo])\r\n\r\n    // console.log(props.userReview);\r\n\r\n    return (\r\n        <Fragment>\r\n            {(user.dashLoading && auth.loading ? (<div>\r\n                <h1>LOADING...</h1>\r\n            </div>\r\n            ) : (<div>\r\n                {/* <h1>{userName}</h1> */}\r\n                <p>{user.userEmail}</p>\r\n                {/* <p>{userUniversity}</p>\r\n                <Review scores={userReview} /> */}\r\n            </div>\r\n                ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        // isAuthenticated: state.register.isAuthenticated,\r\n        auth: state.register,\r\n        //From dashboard state\r\n        user: state.dashboard\r\n        // userUniversity: state.dashboard.university,\r\n        // userReview: state.dashboard.review[0]\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo })(Dashboard);"]},"metadata":{},"sourceType":"module"}