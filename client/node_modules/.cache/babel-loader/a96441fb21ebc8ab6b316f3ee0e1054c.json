{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment } from 'react'; // import { Link } from 'react-router-dom';\n// import axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux';\nimport { fetchUni } from '../../actions/university';\n\nconst Landpage = ({\n  data\n}) => {\n  useEffect(() => {\n    this.props.dispatch(fetchUni());\n  });\n\n  openSelection = e => {\n    const selected = e.currentTarget.value;\n    const data = this.state.universities.find(x => x._id === selected);\n    this.setState({\n      details: data\n    });\n    this.handleModalOpen();\n  };\n\n  clearSelected = () => {\n    this.setState({\n      details: null\n    });\n  };\n\n  handleModalOpen = () => {\n    this.setState(prevState => {\n      return {\n        modalOpen: !prevState.modalOpen\n      };\n    });\n  };\n\n  return !this.data.loading ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"LOADING\"));\n};\n\nLandpage.protoTypes = {\n  fetchUni: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.uniFetch.loading,\n    universities: state.uniFetch.universities\n  };\n};\n\nexport default connect(mapStateToProps)(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","PropTypes","UniversityView","connect","fetchUni","Landpage","data","useEffect","props","dispatch","openSelection","e","selected","currentTarget","value","state","universities","find","x","_id","setState","details","handleModalOpen","clearSelected","prevState","modalOpen","loading","protoTypes","func","isRequired","mapStateToProps","uniFetch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE3BC,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAKC,KAAL,CAAWC,QAAX,CAAoBL,QAAQ,EAA5B;AACH,GAFQ,CAAT;;AAIAM,EAAAA,aAAa,GAAIC,CAAD,IAAO;AACnB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAAjC;AACA,UAAMR,IAAI,GAAG,KAAKS,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUP,QAA5C,CAAb;AACA,SAAKQ,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEf;AAAX,KAAd;AACA,SAAKgB,eAAL;AACH,GALD;;AAOAC,EAAAA,aAAa,GAAG,MAAM;AAClB,SAAKH,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACH,GAFD;;AAIAC,EAAAA,eAAe,GAAG,MAAM;AACpB,SAAKF,QAAL,CAAeI,SAAD,IAAe;AACzB,aAAO;AACHC,QAAAA,SAAS,EAAE,CAACD,SAAS,CAACC;AADnB,OAAP;AAGH,KAJD;AAKH,GAND;;AAQA,SACK,CAAC,KAAKnB,IAAL,CAAUoB,OAAX,gBACG,oBAAE,QAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,CA5BT;AA8BH,CAvDD;;AA0DArB,QAAQ,CAACsB,UAAT,GAAsB;AAClBvB,EAAAA,QAAQ,EAAEH,SAAS,CAAC2B,IAAV,CAAeC;AADP,CAAtB;;AAIA,MAAMC,eAAe,GAAGf,KAAK,IAAI;AAC7B,SAAO;AACHW,IAAAA,OAAO,EAAEX,KAAK,CAACgB,QAAN,CAAeL,OADrB;AAEHV,IAAAA,YAAY,EAAED,KAAK,CAACgB,QAAN,CAAef;AAF1B,GAAP;AAIH,CALD;;AAOA,eAAeb,OAAO,CAAC2B,eAAD,CAAP,CAAyBzB,QAAzB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUni } from '../../actions/university';\r\n\r\n\r\n\r\nconst Landpage = ({ data }) => {\r\n\r\n    useEffect(() => {\r\n        this.props.dispatch(fetchUni());\r\n    });\r\n\r\n    openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = this.state.universities.find(x => x._id === selected);\r\n        this.setState({ details: data });\r\n        this.handleModalOpen();\r\n    }\r\n\r\n    clearSelected = () => {\r\n        this.setState({ details: null })\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        (!this.data.loading ? (\r\n            < Fragment >\r\n                {/* <Fragment>\r\n                    <UniversityView\r\n                        details={this.state.details}\r\n                        // selected={this.state.selectedUni}\r\n                        currentState={this.state.modalOpen}\r\n                        handleModalOpen={this.handleModalOpen}\r\n                        clearSelected={this.clearSelected}>\r\n                    </UniversityView >\r\n                </Fragment> */}\r\n                {/* < div className=\"container\" >\r\n                        <section key={universities} className=\"landing\">\r\n                            {universities.map((obj, index) => {\r\n                                return <button key={index} value={obj._id} onClick={e => { this.openSelection(e) }}>\r\n                                    <div className=\"university\" key={index}>\r\n                                        <div className=\"name\" key={obj._id}>{obj.name}</div>\r\n                                        {obj.scores.map((points) => {\r\n                                            return <div className=\"points\" key={index}> {points.total} </div>\r\n                                        }\r\n                                        )}\r\n                                    </div>\r\n                                </button>\r\n                            })}\r\n                        </section>\r\n                    </div > */}\r\n            </Fragment >\r\n        ) : (<div><h1>LOADING</h1></div>))\r\n    )\r\n}\r\n\r\n\r\nLandpage.protoTypes = {\r\n    fetchUni: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.uniFetch.loading,\r\n        universities: state.uniFetch.universities\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}