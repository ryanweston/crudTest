{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState, onChange, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/login';\nimport '../../Auth.css';\nimport PropTypes from 'prop-types';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nconst Login = ({\n  login,\n  auth,\n  loading\n}) => {\n  console.log(localStorage);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const changeState = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  }); // const captcha = document.querySelector('#g-recaptcha-response').value;\n\n\n  const recaptchaRef = React.createRef();\n\n  async function loginSubmit(e) {\n    e.preventDefault();\n    const captcha = recaptchaRef.current.getValue();\n    console.log(captcha);\n    const loginUser = {\n      email,\n      password,\n      captcha\n    };\n    login(loginUser);\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, auth && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"You're already logged in!\"), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"section\", {\n    className: \"login\",\n    onSubmit: e => loginSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    onChange: e => changeState(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    onChange: e => changeState(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    ref: recaptchaRef,\n    sitekey: \"6Le3m_MUAAAAAGGupKFXSTuNEIBjwAB486DNz6NY\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.register.isAuthenticated,\n    loading: state.register.loading\n  };\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Login.js"],"names":["React","useState","onChange","Fragment","Redirect","connect","login","PropTypes","ReCAPTCHA","Login","auth","loading","console","log","localStorage","formData","setFormData","email","password","changeState","e","target","name","value","recaptchaRef","createRef","loginSubmit","preventDefault","captcha","current","getValue","loginUser","mapStateToProps","state","register","isAuthenticated","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, onChange, Fragment } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../actions/login';\r\nimport '../../Auth.css';\r\nimport PropTypes from 'prop-types';\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nconst Login = ({ login, auth, loading }) => {\r\n\r\n    console.log(localStorage);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { email, password } = formData;\r\n\r\n    const changeState = (e) => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    // const captcha = document.querySelector('#g-recaptcha-response').value;\r\n    const recaptchaRef = React.createRef();\r\n\r\n    async function loginSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const captcha = recaptchaRef.current.getValue();\r\n        console.log(captcha);\r\n\r\n        const loginUser = {\r\n            email,\r\n            password,\r\n            captcha\r\n        }\r\n        login(loginUser);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {(auth && !loading ? (<div>\r\n                <h1>You're already logged in!</h1>\r\n                <Redirect to='/dashboard' />\r\n            </div>) : (<section className=\"login\" onSubmit={e => loginSubmit(e)}>\r\n                <h1>Sign Up</h1>\r\n                <form>\r\n                    <label>Email</label>\r\n                    <input name=\"email\" type=\"email\" onChange={(e) => changeState(e)} />\r\n                    <br />\r\n                    <label>Password</label>\r\n                    <input name=\"password\" type=\"password\" onChange={(e) => changeState(e)} />\r\n                    <ReCAPTCHA\r\n                        ref={recaptchaRef}\r\n                        sitekey=\"6Le3m_MUAAAAAGGupKFXSTuNEIBjwAB486DNz6NY\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <input type=\"submit\" />\r\n                </form>\r\n            </section>))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.register.isAuthenticated,\r\n        loading: state.register.loading,\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"]},"metadata":{},"sourceType":"module"}