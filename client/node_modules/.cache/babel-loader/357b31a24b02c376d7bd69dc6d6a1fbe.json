{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment } from 'react'; // import { Link } from 'react-router-dom';\n// import axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux';\nimport { fetchUni } from '../../actions/university';\n\nclass Landpage extends React.Component(props) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      universities: [],\n      modalOpen: false,\n      details: null\n    };\n\n    this.openSelection = e => {\n      const selected = e.currentTarget.value;\n      const data = this.state.universities.find(x => x._id === selected);\n      this.setState({\n        details: data\n      });\n      this.handleModalOpen();\n    };\n\n    this.clearSelected = () => {\n      this.setState({\n        details: null\n      });\n    };\n\n    this.handleModalOpen = () => {\n      this.setState(prevState => {\n        return {\n          modalOpen: !prevState.modalOpen\n        };\n      });\n      console.log(this.state);\n    };\n  }\n\n  componentDidMount() {\n    fetchUni();\n  }\n\n  render() {\n    // console.log(universities);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(UniversityView, {\n      details: this.state.details // selected={this.state.selectedUni}\n      ,\n      currentState: this.state.modalOpen,\n      handleModalOpen: this.handleModalOpen,\n      clearSelected: this.clearSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      key: this.state.universities,\n      className: \"landing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, this.state.universities.map((obj, index) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: index,\n        value: obj._id,\n        onClick: e => {\n          this.openSelection(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"university\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        key: obj._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, obj.name), obj.scores.map(points => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"points\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 48\n          }\n        }, \" \", points.total, \" \");\n      })));\n    }))));\n  }\n\n}\n\nLandpage.protoTypes = {\n  fetchUni: PropTypes.func.isRequired\n}; // const mapStateToProps = state => {\n//     return {\n//         universities: state.universities\n//     }\n// }\n\nexport default connect(null, {\n  fetchUni\n})(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","PropTypes","UniversityView","connect","fetchUni","Landpage","Component","props","state","universities","modalOpen","details","openSelection","e","selected","currentTarget","value","data","find","x","_id","setState","handleModalOpen","clearSelected","prevState","console","log","componentDidMount","render","map","obj","index","name","scores","points","total","protoTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUni } from '../../actions/university';\r\n\r\n\r\n\r\nclass Landpage extends React.Component(props) {\r\n\r\n    state = {\r\n        universities: [],\r\n        modalOpen: false,\r\n        details: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchUni();\r\n    }\r\n\r\n    openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = this.state.universities.find(x => x._id === selected);\r\n        this.setState({ details: data });\r\n        this.handleModalOpen();\r\n    }\r\n\r\n    clearSelected = () => {\r\n        this.setState({ details: null })\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n            }\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        // console.log(universities);\r\n        return (\r\n            <Fragment>\r\n                <Fragment>\r\n                    <UniversityView\r\n                        details={this.state.details}\r\n                        // selected={this.state.selectedUni}\r\n                        currentState={this.state.modalOpen}\r\n                        handleModalOpen={this.handleModalOpen}\r\n                        clearSelected={this.clearSelected}>\r\n                    </UniversityView >\r\n                </Fragment>\r\n                <div className=\"container\">\r\n                    <section key={this.state.universities} className=\"landing\">\r\n                        {this.state.universities.map((obj, index) => {\r\n                            return <button key={index} value={obj._id} onClick={e => { this.openSelection(e) }}>\r\n                                <div className=\"university\" key={index}>\r\n                                    <div className=\"name\" key={obj._id}>{obj.name}</div>\r\n                                    {obj.scores.map((points) => {\r\n                                        return <div className=\"points\" key={index}> {points.total} </div>\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n                            </button>\r\n                        })}\r\n                    </section>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nLandpage.protoTypes = {\r\n    fetchUni: PropTypes.func.isRequired,\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         universities: state.universities\r\n//     }\r\n// }\r\n\r\nexport default connect(null, { fetchUni })(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}