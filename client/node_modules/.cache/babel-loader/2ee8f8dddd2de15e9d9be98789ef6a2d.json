{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getUserInfo, deleteReview } from '../../actions/dashboard';\nimport PropTypes from 'prop-types';\nimport ViewReview from './ViewReview';\n\nconst Dashboard = ({\n  getUserInfo,\n  user,\n  auth,\n  deleteReview\n}) => {\n  useEffect(() => {\n    //Ensures getUser has been called first, setting loading to false to prevent race conditions\n    if (auth.loading === false) {\n      getUserInfo();\n    }\n  }, [getUserInfo, auth.loading]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, user.loading && auth.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"LOADING...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Profile Information:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, auth.user.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, user.university), /*#__PURE__*/React.createElement(ViewReview, {\n    review: user.review,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    auth: state.register,\n    //From dashboard state\n    user: state.dashboard\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired,\n  deleteReview: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserInfo,\n  deleteReview\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","useState","Link","connect","getUserInfo","deleteReview","PropTypes","ViewReview","Dashboard","user","auth","loading","name","email","university","review","mapStateToProps","state","register","dashboard","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,yBAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA,WAAF;AAAeK,EAAAA,IAAf;AAAqBC,EAAAA,IAArB;AAA2BL,EAAAA;AAA3B,CAAD,KAA+C;AAE7DN,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIW,IAAI,CAACC,OAAL,KAAiB,KAArB,EAA4B;AACxBP,MAAAA,WAAW;AACd;AACJ,GALQ,EAKN,CAACA,WAAD,EAAcM,IAAI,CAACC,OAAnB,CALM,CAAT;AAOA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,IAAI,CAACE,OAAL,IAAgBD,IAAI,CAACC,OAArB,gBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD8B,CAAhC,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADC,eAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACD,IAAL,CAAUG,IAAd,CAFC,eAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,KAAT,CAHC,eAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,IAAI,CAACK,UAAT,CAJC,eAKD,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEL,IAAI,CAACM,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALC,CAJT,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAeH,CAxBD;;AA0BA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH;AACAP,IAAAA,IAAI,EAAEO,KAAK,CAACC,QAFT;AAGH;AACAT,IAAAA,IAAI,EAAEQ,KAAK,CAACE;AAJT,GAAP;AAMH,CAPD;;AASAX,SAAS,CAACY,SAAV,GAAsB;AAClBhB,EAAAA,WAAW,EAAEE,SAAS,CAACe,IAAV,CAAeC,UADV;AAElBjB,EAAAA,YAAY,EAAEC,SAAS,CAACe,IAAV,CAAeC;AAFX,CAAtB;AAMA,eAAenB,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDG,SAAxD,CAAf","sourcesContent":["import React, { useEffect, Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo, deleteReview } from '../../actions/dashboard';\r\nimport PropTypes from 'prop-types';\r\nimport ViewReview from './ViewReview';\r\n\r\nconst Dashboard = ({ getUserInfo, user, auth, deleteReview }) => {\r\n\r\n    useEffect(() => {\r\n        //Ensures getUser has been called first, setting loading to false to prevent race conditions\r\n        if (auth.loading === false) {\r\n            getUserInfo()\r\n        }\r\n    }, [getUserInfo, auth.loading]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {(user.loading && auth.loading ? (<div>\r\n                <h1>LOADING...</h1>\r\n            </div>\r\n            ) : (<div>\r\n                <h1>Profile Information:</h1>\r\n                <p>{auth.user.name}</p>\r\n                <p>{user.email}</p>\r\n                <p>{user.university}</p>\r\n                <ViewReview review={user.review} />\r\n            </div>))}\r\n            <br />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        auth: state.register,\r\n        //From dashboard state\r\n        user: state.dashboard\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    deleteReview: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo, deleteReview })(Dashboard);"]},"metadata":{},"sourceType":"module"}