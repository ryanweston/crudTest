{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../actions/dashboard';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\n\nconst Dashboard = ({\n  getUserInfo,\n  loading,\n  userName,\n  dashLoading,\n  userEmail\n}) => {\n  useEffect(() => {\n    getUserInfo();\n    console.log(userName);\n  }, [getUserInfo]);\n  console.log(props.userReview);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, dashLoading && loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"LOADING...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, userEmail)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    // isAuthenticated: state.register.isAuthenticated,\n    userName: state.register.user.name,\n    loading: state.register.loading,\n    //From dashboard state\n    dashLoading: state.dashboard.loading,\n    userEmail: state.dashboard.email // userUniversity: state.dashboard.university,\n    // userReview: state.dashboard.review[0]\n\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserInfo\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","connect","getUserInfo","PropTypes","Review","Dashboard","loading","userName","dashLoading","userEmail","console","log","props","userReview","mapStateToProps","state","register","user","name","dashboard","email","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEH,EAAAA,WAAF;AAAeI,EAAAA,OAAf;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,WAAlC;AAA+CC,EAAAA;AAA/C,CAAD,KAAgE;AAE9EV,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,WAAW;AACXQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,GAHQ,EAGN,CAACL,WAAD,CAHM,CAAT;AAKAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,UAAlB;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,WAAW,IAAIF,OAAf,gBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADwB,CAA1B,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,SAAJ,CAFC,CAJT,CADJ;AAcH,CAvBD;;AAyBA,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH;AACA;AACAR,IAAAA,QAAQ,EAAEQ,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,IAH3B;AAIHZ,IAAAA,OAAO,EAAES,KAAK,CAACC,QAAN,CAAeV,OAJrB;AAKH;AACAE,IAAAA,WAAW,EAAEO,KAAK,CAACI,SAAN,CAAgBb,OAN1B;AAOHG,IAAAA,SAAS,EAAEM,KAAK,CAACI,SAAN,CAAgBC,KAPxB,CAQH;AACA;;AATG,GAAP;AAWH,CAZD;;AAcAf,SAAS,CAACgB,SAAV,GAAsB;AAClBnB,EAAAA,WAAW,EAAEC,SAAS,CAACmB,IAAV,CAAeC;AADV,CAAtB;AAKA,eAAetB,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,SAA1C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/dashboard';\r\nimport PropTypes from 'prop-types';\r\nimport Review from './Review';\r\n\r\nconst Dashboard = ({ getUserInfo, loading, userName, dashLoading, userEmail }) => {\r\n\r\n    useEffect(() => {\r\n        getUserInfo();\r\n        console.log(userName);\r\n    }, [getUserInfo])\r\n\r\n    console.log(props.userReview);\r\n\r\n    return (\r\n        <Fragment>\r\n            {(dashLoading && loading ? (<div>\r\n                <h1>LOADING...</h1>\r\n            </div>\r\n            ) : (<div>\r\n                {/* <h1>{userName}</h1> */}\r\n                <p>{userEmail}</p>\r\n                {/* <p>{userUniversity}</p>\r\n                <Review scores={userReview} /> */}\r\n            </div>\r\n                ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        // isAuthenticated: state.register.isAuthenticated,\r\n        userName: state.register.user.name,\r\n        loading: state.register.loading,\r\n        //From dashboard state\r\n        dashLoading: state.dashboard.loading,\r\n        userEmail: state.dashboard.email,\r\n        // userUniversity: state.dashboard.university,\r\n        // userReview: state.dashboard.review[0]\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo })(Dashboard);"]},"metadata":{},"sourceType":"module"}