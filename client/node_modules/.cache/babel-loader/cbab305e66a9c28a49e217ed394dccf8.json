{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../actions/dashboard';\nimport { deleteUser } from '../../actions/login';\nimport PropTypes from 'prop-types';\nimport ViewReview from './ViewReview';\n\nconst Dashboard = ({\n  getUserInfo,\n  user,\n  auth,\n  deleteUser\n}) => {\n  const [deleteOption, optionSet] = useState({\n    popUp: false,\n    popUp2: false\n  });\n  useEffect(() => {\n    //Ensures getUser has been called first, setting loading to false to prevent race conditions\n    if (auth.loading === false) {\n      getUserInfo();\n    }\n  }, [getUserInfo, auth.loading]);\n\n  const handleDelete = () => optionSet(prevState => {\n    return {\n      popUp: !prevState.popUp\n    };\n  });\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, user.loading && auth.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"LOADING...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Profile Information:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, auth.user.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, user.university), /*#__PURE__*/React.createElement(ViewReview, {\n    review: user.review,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Delete Account\"), deleteOption.popUp === false ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 47\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Are you sure you want to delete your account?\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"No\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    auth: state.register,\n    //From dashboard state\n    user: state.dashboard\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired // deleteReview: PropTypes.func.isRequired,\n\n};\nexport default connect(mapStateToProps, {\n  getUserInfo,\n  deleteUser\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","useState","connect","getUserInfo","deleteUser","PropTypes","ViewReview","Dashboard","user","auth","deleteOption","optionSet","popUp","popUp2","loading","handleDelete","prevState","name","email","university","review","mapStateToProps","state","register","dashboard","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/dashboard';\r\nimport { deleteUser } from '../../actions/login';\r\nimport PropTypes from 'prop-types';\r\nimport ViewReview from './ViewReview';\r\n\r\nconst Dashboard = ({ getUserInfo, user, auth, deleteUser }) => {\r\n\r\n    const [deleteOption, optionSet] = useState({\r\n        popUp: false,\r\n        popUp2: false\r\n    })\r\n    useEffect(() => {\r\n        //Ensures getUser has been called first, setting loading to false to prevent race conditions\r\n        if (auth.loading === false) {\r\n            getUserInfo()\r\n        }\r\n    }, [getUserInfo, auth.loading]);\r\n\r\n    const handleDelete = () => optionSet(\r\n        (prevState) => {\r\n            return {\r\n                popUp: !prevState.popUp\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            {(user.loading && auth.loading ? (<div>\r\n                <h1>LOADING...</h1>\r\n            </div>) : (<div>\r\n                <h1>Profile Information:</h1>\r\n                <p>{auth.user.name}</p>\r\n                <p>{user.email}</p>\r\n                <p>{user.university}</p>\r\n                <ViewReview review={user.review} />\r\n            </div>))}\r\n            <br />\r\n            <button onClick={handleDelete}>Delete Account</button>\r\n            {(deleteOption.popUp === false ? (<Fragment></Fragment>) : (<div>\r\n                <p>Are you sure you want to delete your account?</p>\r\n                <button onClick={handleDelete}>Yes</button>\r\n                <button onClick={handleDelete}>No</button>\r\n            </div>))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        auth: state.register,\r\n        //From dashboard state\r\n        user: state.dashboard\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    // deleteReview: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo, deleteUser })(Dashboard);"]},"metadata":{},"sourceType":"module"}