{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { setHeader } from './actions/login';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware))); //Sets default for when application is first run to prevent errors\n\nlet currentState = {\n  register: {\n    isAuthenticated: null,\n    token: null,\n    loading: true,\n    user: null\n  }\n}; //Runs to detect any state/token changes, if token has changed or is added (token will be different to default (null)),\n//setHeader function will be called, setting headers with token.\n\nstore.subscribe(() => {\n  const prevState = currentState;\n  currentState = store.getState();\n  console.log(currentState); //If the state/token has changed, set headers and local storage with new token\n\n  if (prevState.register.token !== currentState.register.token) {\n    const token = currentState.register.token;\n    setHeader(token);\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setHeader","initialState","middleware","store","currentState","register","isAuthenticated","token","loading","user","subscribe","prevState","getState","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAEA,MAAMK,KAAK,GAAGR,WAAW,CACrBI,WADqB,EAErBE,YAFqB,EAGrBJ,mBAAmB,CAACD,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAHE,CAAzB,C,CAOA;;AACA,IAAIE,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,eAAe,EAAE,IAAnB;AAAyBC,IAAAA,KAAK,EAAE,IAAhC;AAAsCC,IAAAA,OAAO,EAAE,IAA/C;AAAqDC,IAAAA,IAAI,EAAE;AAA3D;AADK,CAAnB,C,CAKA;AACA;;AACAN,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB,QAAMC,SAAS,GAAGP,YAAlB;AACAA,EAAAA,YAAY,GAAGD,KAAK,CAACS,QAAN,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ,EAHkB,CAIlB;;AACA,MAAIO,SAAS,CAACN,QAAV,CAAmBE,KAAnB,KAA6BH,YAAY,CAACC,QAAb,CAAsBE,KAAvD,EAA8D;AAC1D,UAAMA,KAAK,GAAGH,YAAY,CAACC,QAAb,CAAsBE,KAApC;AACAP,IAAAA,SAAS,CAACO,KAAD,CAAT;AACH;AACJ,CATD;AAWA,eAAeJ,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport { setHeader } from './actions/login';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n\r\n//Sets default for when application is first run to prevent errors\r\nlet currentState = {\r\n    register: { isAuthenticated: null, token: null, loading: true, user: null }\r\n}\r\n\r\n\r\n//Runs to detect any state/token changes, if token has changed or is added (token will be different to default (null)),\r\n//setHeader function will be called, setting headers with token.\r\nstore.subscribe(() => {\r\n    const prevState = currentState;\r\n    currentState = store.getState();\r\n    console.log(currentState);\r\n    //If the state/token has changed, set headers and local storage with new token\r\n    if (prevState.register.token !== currentState.register.token) {\r\n        const token = currentState.register.token;\r\n        setHeader(token);\r\n    }\r\n})\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}