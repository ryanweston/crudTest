{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAILURE, GET_USER } from './types';\nimport axios from 'axios';\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  const body = {\n    email,\n    password\n  };\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  console.log('Request made');\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    const returned = res.data;\n    dispatch(loginSuccess(returned));\n    dispatch(getUser());\n  } catch (err) {\n    dispatch(loginFailure(err));\n  }\n};\nexport const loginSuccess = token => ({\n  type: LOGIN_SUCCESS,\n  payload: token\n});\nexport const loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n}); //Sent to recieve the users information, token is sent through headers attached by functon\n//that runs constantly during the application session, checking against the token from local storage\n//and appending it to every header request to API. \n// @ return -> users: name, email, university\n\nexport const getUser = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.reponse.data);\n  }\n};","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/actions/login.js"],"names":["LOGIN_SUCCESS","LOGIN_FAILURE","GET_USER","axios","login","email","password","dispatch","body","config","headers","console","log","res","post","returned","data","loginSuccess","getUser","err","loginFailure","token","type","payload","error","get","reponse"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,QAAvC,QAAuD,SAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB,MAAMC,QAAN,IAAkB;AAC5D,QAAMC,IAAI,GAAG;AACTH,IAAAA,KADS;AAETC,IAAAA;AAFS,GAAb;AAKA,QAAMG,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,WAAX,EAAwBN,IAAxB,EAA8BC,MAA9B,CAAlB;AACA,UAAMM,QAAQ,GAAGF,GAAG,CAACG,IAArB;AAEAT,IAAAA,QAAQ,CAACU,YAAY,CAACF,QAAD,CAAb,CAAR;AACAR,IAAAA,QAAQ,CAACW,OAAO,EAAR,CAAR;AACH,GAND,CAME,OAAOC,GAAP,EAAY;AACVZ,IAAAA,QAAQ,CAACa,YAAY,CAACD,GAAD,CAAb,CAAR;AACH;AACJ,CAtBM;AAwBP,OAAO,MAAMF,YAAY,GAAII,KAAD,KAAY;AACpCC,EAAAA,IAAI,EAAEtB,aAD8B;AAEpCuB,EAAAA,OAAO,EAAEF;AAF2B,CAAZ,CAArB;AAKP,OAAO,MAAMD,YAAY,GAAII,KAAD,KAAY;AACpCF,EAAAA,IAAI,EAAErB,aAD8B;AAEpCsB,EAAAA,OAAO,EAAEC;AAF2B,CAAZ,CAArB,C,CAMP;AACA;AACA;AACA;;AACA,OAAO,MAAMN,OAAO,GAAG,MAAM,MAAMX,QAAN,IAAkB;AAC3C,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMV,KAAK,CAACsB,GAAN,CAAU,WAAV,CAAlB;AACAlB,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAEpB,QADD;AAELqB,MAAAA,OAAO,EAAEV,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOG,GAAP,EAAY;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACO,OAAJ,CAAYV,IAAxB;AACH;AACJ,CAVM","sourcesContent":["import { LOGIN_SUCCESS, LOGIN_FAILURE, GET_USER } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const login = ({ email, password }) => async dispatch => {\r\n    const body = {\r\n        email,\r\n        password,\r\n    }\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    console.log('Request made');\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n        const returned = res.data;\r\n\r\n        dispatch(loginSuccess(returned));\r\n        dispatch(getUser());\r\n    } catch (err) {\r\n        dispatch(loginFailure(err));\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (token) => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload: token\r\n})\r\n\r\nexport const loginFailure = (error) => ({\r\n    type: LOGIN_FAILURE,\r\n    payload: error\r\n})\r\n\r\n\r\n//Sent to recieve the users information, token is sent through headers attached by functon\r\n//that runs constantly during the application session, checking against the token from local storage\r\n//and appending it to every header request to API. \r\n// @ return -> users: name, email, university\r\nexport const getUser = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(err.reponse.data)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}