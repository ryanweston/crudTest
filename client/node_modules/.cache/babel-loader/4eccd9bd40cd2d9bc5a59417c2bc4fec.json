{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport axios from 'axios';\n\nconst Register = () => {\n  // use state initialises objects default format. hook runs function on the given object\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirm: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    passwordConfirm\n  } = formData; // function runs from event, changing relevant form data for each input by selected name and it's corresponding value\n  // ... operator preserves previous data from form, only changing states of given input\n\n  const formChange = e => setFormData({ ...formData,\n    [e.target.name]: e.targetValue\n  });\n\n  const formSubmit = async e => {\n    //Prevents default HTML handling, in this instance causing the page to refresh.\n    e.preventDefault();\n    const registerUser = {\n      name,\n      email,\n      password\n    };\n\n    try {\n      //Sets headers for the post\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }; //Converts JS object to JSON string format\n\n      const body = JSON.stringify(registerUser); //Runs function and stores response\n\n      const res = await axios.post('http://localhost:4000/api/users', body, config);\n      console.log(res.data);\n    } catch (err) {\n      console.error(err.response.data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => formSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email Address\",\n    value: email,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"passwordVerify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Verify Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"passwordConfirm\",\n    placeholder: \"Verify Password\",\n    value: passwordConfirm,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","axios","Register","formData","setFormData","name","email","password","passwordConfirm","formChange","e","target","targetValue","formSubmit","preventDefault","registerUser","config","headers","body","JSON","stringify","res","post","console","log","data","err","error","response"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n    // use state initialises objects default format. hook runs function on the given object\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: ''\r\n    });\r\n\r\n    const { name, email, password, passwordConfirm } = formData;\r\n\r\n    // function runs from event, changing relevant form data for each input by selected name and it's corresponding value\r\n    // ... operator preserves previous data from form, only changing states of given input\r\n    const formChange = e => setFormData({ ...formData, [e.target.name]: e.targetValue })\r\n    const formSubmit = async e => {\r\n        //Prevents default HTML handling, in this instance causing the page to refresh.\r\n        e.preventDefault();\r\n        const registerUser = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n        try {\r\n            //Sets headers for the post\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            //Converts JS object to JSON string format\r\n            const body = JSON.stringify(registerUser);\r\n            //Runs function and stores response\r\n            const res = await axios.post('http://localhost:4000/api/users', body, config);\r\n            console.log(res.data);\r\n        } catch (err) {\r\n            console.error(err.response.data);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Sign Up</h1>\r\n            <form onSubmit={e => formSubmit(e)}>\r\n                <label for=\"name\">Name:</label>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Name\" value={name} onChange={e => formChange(e)} />\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email Address\" value={email} onChange={e => formChange(e)} />\r\n                <label for=\"email\">Password</label>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={e => formChange(e)} />\r\n                <label for=\"passwordVerify\">Verify Password</label>\r\n                <input type=\"password\" name=\"passwordConfirm\" placeholder=\"Verify Password\" value={passwordConfirm} onChange={e => formChange(e)} />\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}