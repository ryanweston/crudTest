{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAILURE, SET_ALERT } from './types';\nimport axios from 'axios';\nimport { getUser } from './login';\nimport { setAlert } from './alert';\nimport { set } from 'mongoose';\nexport const register = formData => async dispatch => {\n  const body = JSON.stringify(formData);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('api/users', body, config);\n    console.log(res.data);\n    dispatch(registerSuccess(res.data));\n    dispatch(getUser(res.data));\n  } catch (err) {\n    console.log(err.response.data);\n    setAlert(err.response.data.errors[0].msg, 'danger');\n    dispatch(registerFailure(err.response.data));\n  }\n};\nexport const registerSuccess = token => ({\n  type: REGISTER_SUCCESS,\n  payload: token\n});\nexport const registerFailure = error => ({\n  type: REGISTER_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/actions/register.js"],"names":["REGISTER_SUCCESS","REGISTER_FAILURE","SET_ALERT","axios","getUser","setAlert","set","register","formData","dispatch","body","JSON","stringify","config","headers","res","post","console","log","data","registerSuccess","err","response","errors","msg","registerFailure","token","type","payload","error"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,gBAA3B,EAA6CC,SAA7C,QAA8D,SAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,GAAT,QAAoB,UAApB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACpD,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAb;AAEA,QAAMK,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,WAAX,EAAwBN,IAAxB,EAA8BG,MAA9B,CAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAV,IAAAA,QAAQ,CAACW,eAAe,CAACL,GAAG,CAACI,IAAL,CAAhB,CAAR;AACAV,IAAAA,QAAQ,CAACL,OAAO,CAACW,GAAG,CAACI,IAAL,CAAR,CAAR;AACH,GALD,CAMA,OAAOE,GAAP,EAAY;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,QAAJ,CAAaH,IAAzB;AACAd,IAAAA,QAAQ,CAACgB,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,MAAlB,CAAyB,CAAzB,EAA4BC,GAA7B,EAAkC,QAAlC,CAAR;AACAf,IAAAA,QAAQ,CAACgB,eAAe,CAACJ,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAhB,CAAR;AACH;AACJ,CApBM;AAsBP,OAAO,MAAMC,eAAe,GAAIM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE3B,gBADiC;AAEvC4B,EAAAA,OAAO,EAAEF;AAF8B,CAAZ,CAAxB;AAKP,OAAO,MAAMD,eAAe,GAAII,KAAD,KAAY;AACvCF,EAAAA,IAAI,EAAE1B,gBADiC;AAEvC2B,EAAAA,OAAO,EAAEC;AAF8B,CAAZ,CAAxB","sourcesContent":["import { REGISTER_SUCCESS, REGISTER_FAILURE, SET_ALERT } from './types';\r\nimport axios from 'axios';\r\nimport { getUser } from './login';\r\nimport { setAlert } from './alert';\r\nimport { set } from 'mongoose';\r\n\r\nexport const register = (formData) => async dispatch => {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post('api/users', body, config);\r\n        console.log(res.data)\r\n        dispatch(registerSuccess(res.data));\r\n        dispatch(getUser(res.data));\r\n    }\r\n    catch (err) {\r\n        console.log(err.response.data)\r\n        setAlert(err.response.data.errors[0].msg, 'danger');\r\n        dispatch(registerFailure(err.response.data))\r\n    }\r\n}\r\n\r\nexport const registerSuccess = (token) => ({\r\n    type: REGISTER_SUCCESS,\r\n    payload: token\r\n})\r\n\r\nexport const registerFailure = (error) => ({\r\n    type: REGISTER_FAILURE,\r\n    payload: error\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}