{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment } from 'react'; // import { Link } from 'react-router-dom';\n// import axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux';\nimport { fetchUni } from '../../actions/university';\n\nclass Landpage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.openSelection = e => {\n      const selected = e.currentTarget.value;\n      const data = this.state.universities.find(x => x._id === selected);\n      this.setState({\n        details: data\n      });\n      this.handleModalOpen();\n    };\n\n    this.clearSelected = () => {\n      this.setState({\n        details: null\n      });\n    };\n\n    this.handleModalOpen = () => {\n      this.setState(prevState => {\n        return {\n          modalOpen: !prevState.modalOpen\n        };\n      });\n    };\n  }\n\n  // constructor(props) {\n  //     super(props);\n  // }\n  // state = {\n  //     modalOpen: false,\n  //     details: null\n  // }\n  componentDidMount() {\n    this.props.dispatch(fetchUni());\n  }\n\n  render() {\n    return !this.props.loading ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }, \"LOADING\"));\n  }\n\n}\n\nLandpage.protoTypes = {\n  fetchUni: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.uniFetch.loading,\n    universities: state.uniFetch.universities\n  };\n};\n\nexport default connect(mapStateToProps)(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","PropTypes","UniversityView","connect","fetchUni","Landpage","Component","openSelection","e","selected","currentTarget","value","data","state","universities","find","x","_id","setState","details","handleModalOpen","clearSelected","prevState","modalOpen","componentDidMount","props","dispatch","render","loading","protoTypes","func","isRequired","mapStateToProps","uniFetch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAIA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAenCC,aAfmC,GAelBC,CAAD,IAAO;AACnB,YAAMC,QAAQ,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAAjC;AACA,YAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUR,QAA5C,CAAb;AACA,WAAKS,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEP;AAAX,OAAd;AACA,WAAKQ,eAAL;AACH,KApBkC;;AAAA,SAsBnCC,aAtBmC,GAsBnB,MAAM;AAClB,WAAKH,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAxBkC;;AAAA,SA0BnCC,eA1BmC,GA0BjB,MAAM;AACpB,WAAKF,QAAL,CAAeI,SAAD,IAAe;AACzB,eAAO;AACHC,UAAAA,SAAS,EAAE,CAACD,SAAS,CAACC;AADnB,SAAP;AAGH,OAJD;AAKH,KAhCkC;AAAA;;AAEnC;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBtB,QAAQ,EAA5B;AACH;;AAqBDuB,EAAAA,MAAM,GAAG;AAEL,WACK,CAAC,KAAKF,KAAL,CAAWG,OAAZ,gBACG,oBAAE,QAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,CA5BT;AA8BH;;AAlEkC;;AAqEvCvB,QAAQ,CAACwB,UAAT,GAAsB;AAClBzB,EAAAA,QAAQ,EAAEH,SAAS,CAAC6B,IAAV,CAAeC;AADP,CAAtB;;AAIA,MAAMC,eAAe,GAAGnB,KAAK,IAAI;AAC7B,SAAO;AACHe,IAAAA,OAAO,EAAEf,KAAK,CAACoB,QAAN,CAAeL,OADrB;AAEHd,IAAAA,YAAY,EAAED,KAAK,CAACoB,QAAN,CAAenB;AAF1B,GAAP;AAIH,CALD;;AAOA,eAAeX,OAAO,CAAC6B,eAAD,CAAP,CAAyB3B,QAAzB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUni } from '../../actions/university';\r\n\r\n\r\n\r\nclass Landpage extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    // state = {\r\n    //     modalOpen: false,\r\n    //     details: null\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchUni());\r\n    }\r\n\r\n    openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = this.state.universities.find(x => x._id === selected);\r\n        this.setState({ details: data });\r\n        this.handleModalOpen();\r\n    }\r\n\r\n    clearSelected = () => {\r\n        this.setState({ details: null })\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            (!this.props.loading ? (\r\n                < Fragment >\r\n                    {/* <Fragment>\r\n                    <UniversityView\r\n                        details={this.state.details}\r\n                        // selected={this.state.selectedUni}\r\n                        currentState={this.state.modalOpen}\r\n                        handleModalOpen={this.handleModalOpen}\r\n                        clearSelected={this.clearSelected}>\r\n                    </UniversityView >\r\n                </Fragment> */}\r\n                    {/* < div className=\"container\" >\r\n                        <section key={universities} className=\"landing\">\r\n                            {universities.map((obj, index) => {\r\n                                return <button key={index} value={obj._id} onClick={e => { this.openSelection(e) }}>\r\n                                    <div className=\"university\" key={index}>\r\n                                        <div className=\"name\" key={obj._id}>{obj.name}</div>\r\n                                        {obj.scores.map((points) => {\r\n                                            return <div className=\"points\" key={index}> {points.total} </div>\r\n                                        }\r\n                                        )}\r\n                                    </div>\r\n                                </button>\r\n                            })}\r\n                        </section>\r\n                    </div > */}\r\n                </Fragment >\r\n            ) : (<div><h1>LOADING</h1></div>))\r\n        )\r\n    }\r\n}\r\n\r\nLandpage.protoTypes = {\r\n    fetchUni: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.uniFetch.loading,\r\n        universities: state.uniFetch.universities\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}