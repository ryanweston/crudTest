{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport axios from 'axios';\nimport UniversityDrop from './UniversityDrop';\n\nconst Register = () => {\n  // use state initialises objects default format. hook runs function on the given object\n  console.log({\n    UniversityDrop\n  });\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirm: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    passwordConfirm\n  } = formData; // function runs from event, changing relevant form data for each input by selected name and it's corresponding value\n  // ... operator preserves previous data from form, only changing states of given input\n\n  const formChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const formSubmit = async e => {\n    //Prevents default HTML handling, in this instance causing the page to refresh.\n    e.preventDefault();\n\n    if (password !== passwordConfirm) {\n      console.log('Passwords do not match');\n    } else {\n      console.log(formData);\n      const registerUser = {\n        name,\n        email,\n        password\n      };\n\n      try {\n        //Sets headers for the post\n        const config = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }; //Converts JS object to JSON string format\n\n        const body = JSON.stringify(registerUser); //Runs function and stores response\n\n        const res = await axios.post('/api/users', body, config);\n        console.log(res.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => formSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email Address\",\n    value: email,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Verify Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"passwordConfirm\",\n    placeholder: \"Verify Password\",\n    value: passwordConfirm,\n    onChange: e => formChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","axios","UniversityDrop","Register","console","log","formData","setFormData","name","email","password","passwordConfirm","formChange","e","target","value","formSubmit","preventDefault","registerUser","config","headers","body","JSON","stringify","res","post","data","err","error","response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAGnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACrCQ,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,eAAe,EAAE;AAJoB,GAAD,CAAxC;AAOA,QAAM;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAA6CL,QAAnD,CAZmB,CAcnB;AACA;;AACA,QAAMM,UAAU,GAAGC,CAAC,IAAIN,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACO,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAAzC,GAAD,CAAnC;;AAEA,QAAMC,UAAU,GAAG,MAAMH,CAAN,IAAW;AAC1B;AACAA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAIP,QAAQ,KAAKC,eAAjB,EAAkC;AAC9BP,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAGA,YAAMY,YAAY,GAAG;AACjBV,QAAAA,IADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA;AAHiB,OAArB;;AAKA,UAAI;AACA;AACA,cAAMS,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADE,SAAf,CAFA,CAOA;;AACA,cAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAAb,CARA,CASA;;AACA,cAAMM,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAG,CAACE,IAAhB;AACH,OAZD,CAYE,OAAOC,GAAP,EAAY;AACVvB,QAAAA,OAAO,CAACwB,KAAR,CAAcD,GAAG,CAACE,QAAJ,CAAaH,IAA3B;AACH;AACJ;AAEJ,GAhCD;;AAkCA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,IAAA,QAAQ,EAAEb,CAAC,IAAIG,UAAU,CAACH,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,MAHhB;AAII,IAAA,KAAK,EAAEL,IAJX;AAKI,IAAA,QAAQ,EAAEK,CAAC,IAAID,UAAU,CAACC,CAAD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,eAUI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,eAHhB;AAII,IAAA,KAAK,EAAEJ,KAJX;AAKI,IAAA,QAAQ,EAAEI,CAAC,IAAID,UAAU,CAACC,CAAD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAkBI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,KAAK,EAAEH,QAJX;AAKI,IAAA,QAAQ,EAAEG,CAAC,IAAID,UAAU,CAACC,CAAD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAzBJ,eA0BI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,iBAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,KAAK,EAAEF,eAJX;AAKI,IAAA,QAAQ,EAAEE,CAAC,IAAID,UAAU,CAACC,CAAD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,eAiCI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,CAFJ,CADJ;AAwCH,CA5FD;;AA8FA,eAAeV,QAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport UniversityDrop from './UniversityDrop';\r\n\r\nconst Register = () => {\r\n\r\n\r\n    // use state initialises objects default format. hook runs function on the given object\r\n    console.log({ UniversityDrop })\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: ''\r\n    });\r\n\r\n    const { name, email, password, passwordConfirm } = formData;\r\n\r\n    // function runs from event, changing relevant form data for each input by selected name and it's corresponding value\r\n    // ... operator preserves previous data from form, only changing states of given input\r\n    const formChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const formSubmit = async e => {\r\n        //Prevents default HTML handling, in this instance causing the page to refresh.\r\n        e.preventDefault();\r\n\r\n        if (password !== passwordConfirm) {\r\n            console.log('Passwords do not match');\r\n        } else {\r\n            console.log(formData);\r\n\r\n\r\n            const registerUser = {\r\n                name,\r\n                email,\r\n                password\r\n            }\r\n            try {\r\n                //Sets headers for the post\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n                //Converts JS object to JSON string format\r\n                const body = JSON.stringify(registerUser);\r\n                //Runs function and stores response\r\n                const res = await axios.post('/api/users', body, config);\r\n                console.log(res.data);\r\n            } catch (err) {\r\n                console.error(err.response.data);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Sign Up</h1>\r\n            <form onSubmit={e => formSubmit(e)}>\r\n                <label>Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    onChange={e => formChange(e)}\r\n                />\r\n                <label>Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    value={email}\r\n                    onChange={e => formChange(e)}\r\n                />\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={e => formChange(e)}\r\n                />\r\n                <label>Verify Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"passwordConfirm\"\r\n                    placeholder=\"Verify Password\"\r\n                    value={passwordConfirm}\r\n                    onChange={e => formChange(e)}\r\n                />\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}