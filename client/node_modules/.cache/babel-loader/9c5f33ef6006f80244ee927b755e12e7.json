{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment } from 'react'; // import { Link } from 'react-router-dom';\n// import axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux';\nimport { fetchUni } from '../../actions/university';\n\nclass Landpage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      universities: [],\n      modalOpen: false,\n      details: null\n    };\n\n    this.openSelection = e => {\n      const selected = e.currentTarget.value;\n      const data = this.state.universities.find(x => x._id === selected);\n      this.setState({\n        details: data\n      });\n      this.handleModalOpen();\n    };\n\n    this.clearSelected = () => {\n      this.setState({\n        details: null\n      });\n    };\n\n    this.handleModalOpen = () => {\n      this.setState(prevState => {\n        return {\n          modalOpen: !prevState.modalOpen\n        };\n      });\n      console.log(this.state);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchUni());\n  }\n\n  render() {\n    // console.log(universities);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nLandpage.protoTypes = {\n  fetchUni: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    loading: state.university,\n    error: state.university\n  };\n}; // const mapDispatchToProps = dispatch => {\n//     // console.log(disp);\n//     return {\n//         fetchUni\n//         // fetchUniBegin,\n//         // fetchUniFailure,\n//     }\n// }\n\n\nexport default connect(mapStateToProps)(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","PropTypes","UniversityView","connect","fetchUni","Landpage","Component","state","universities","modalOpen","details","openSelection","e","selected","currentTarget","value","data","find","x","_id","setState","handleModalOpen","clearSelected","prevState","console","log","componentDidMount","props","dispatch","render","protoTypes","func","isRequired","mapStateToProps","loading","university","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAIA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAF2B;;AAAA,SAYnCC,aAZmC,GAYlBC,CAAD,IAAO;AACnB,YAAMC,QAAQ,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAAjC;AACA,YAAMC,IAAI,GAAG,KAAKT,KAAL,CAAWC,YAAX,CAAwBS,IAAxB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUN,QAA5C,CAAb;AACA,WAAKO,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAEM;AAAX,OAAd;AACA,WAAKK,eAAL;AACH,KAjBkC;;AAAA,SAmBnCC,aAnBmC,GAmBnB,MAAM;AAClB,WAAKF,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KArBkC;;AAAA,SAuBnCW,eAvBmC,GAuBjB,MAAM;AACpB,WAAKD,QAAL,CAAeG,SAAD,IAAe;AACzB,eAAO;AACHd,UAAAA,SAAS,EAAE,CAACc,SAAS,CAACd;AADnB,SAAP;AAGH,OAJD;AAKAe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACH,KA9BkC;AAAA;;AAQnCmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBxB,QAAQ,EAA5B;AACH;;AAsBDyB,EAAAA,MAAM,GAAG;AACL;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AA4BH;;AA9DkC;;AAiEvCxB,QAAQ,CAACyB,UAAT,GAAsB;AAClB1B,EAAAA,QAAQ,EAAEH,SAAS,CAAC8B,IAAV,CAAeC;AADP,CAAtB;;AAIA,MAAMC,eAAe,GAAG1B,KAAK,IAAI;AAC7BiB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,SAAO;AACH2B,IAAAA,OAAO,EAAE3B,KAAK,CAAC4B,UADZ;AAEHC,IAAAA,KAAK,EAAE7B,KAAK,CAAC4B;AAFV,GAAP;AAIH,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAehC,OAAO,CAAC8B,eAAD,CAAP,CAAyB5B,QAAzB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUni } from '../../actions/university';\r\n\r\n\r\n\r\nclass Landpage extends React.Component {\r\n\r\n    state = {\r\n        universities: [],\r\n        modalOpen: false,\r\n        details: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchUni());\r\n    }\r\n\r\n    openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = this.state.universities.find(x => x._id === selected);\r\n        this.setState({ details: data });\r\n        this.handleModalOpen();\r\n    }\r\n\r\n    clearSelected = () => {\r\n        this.setState({ details: null })\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n            }\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        // console.log(universities);\r\n        return (\r\n            <Fragment>\r\n                {/* <Fragment>\r\n                    <UniversityView\r\n                        details={this.state.details}\r\n                        // selected={this.state.selectedUni}\r\n                        currentState={this.state.modalOpen}\r\n                        handleModalOpen={this.handleModalOpen}\r\n                        clearSelected={this.clearSelected}>\r\n                    </UniversityView >\r\n                </Fragment> */}\r\n                <div className=\"container\">\r\n                    {/* <section key={this.state.universities} className=\"landing\">\r\n                        {this.state.universities.map((obj, index) => {\r\n                            return <button key={index} value={obj._id} onClick={e => { this.openSelection(e) }}>\r\n                                <div className=\"university\" key={index}>\r\n                                    <div className=\"name\" key={obj._id}>{obj.name}</div>\r\n                                    {obj.scores.map((points) => {\r\n                                        return <div className=\"points\" key={index}> {points.total} </div>\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n                            </button>\r\n                        })}\r\n                    </section> */}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nLandpage.protoTypes = {\r\n    fetchUni: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        loading: state.university,\r\n        error: state.university\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     // console.log(disp);\r\n//     return {\r\n//         fetchUni\r\n//         // fetchUniBegin,\r\n//         // fetchUniFailure,\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}