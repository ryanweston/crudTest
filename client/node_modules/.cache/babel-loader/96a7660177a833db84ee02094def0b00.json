{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment, useEffect, useState } from 'react'; // import { Link } from 'react-router-dom';\n// import axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux';\nimport { fetchUni } from '../../actions/university';\n\nconst Landpage = props => {\n  const localState = useState({\n    modalOpen: false,\n    details: null\n  });\n  useEffect(() => {\n    props.dispatch(fetchUni());\n  }, []);\n\n  const openSelection = e => {\n    const selected = e.currentTarget.value;\n    const data = props.universities.find(x => x._id === selected);\n    localState.setState({\n      details: data\n    });\n    handleModalOpen();\n  };\n\n  const clearSelected = () => {\n    localState.setState({\n      details: null\n    });\n  };\n\n  const handleModalOpen = () => {\n    this.setState(prevState => {\n      return {\n        modalOpen: !prevState.modalOpen\n      };\n    });\n  };\n\n  return !props.loading ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UniversityView, {\n    details: localState.details // selected={this.state.selectedUni}\n    ,\n    currentState: modalOpen,\n    handleModalOpen: handleModalOpen,\n    clearSelected: clearSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"landing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, props.universities.map((obj, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      value: obj._id,\n      onClick: e => {\n        this.openSelection(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"university\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      key: obj._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, obj.name), obj.scores.map(points => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"points\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 48\n        }\n      }, \" \", points.total, \" \");\n    })));\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"LOADING\"));\n};\n\nLandpage.protoTypes = {\n  fetchUni: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.uniFetch.loading,\n    universities: state.uniFetch.universities\n  };\n};\n\nexport default connect(mapStateToProps)(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","useEffect","useState","PropTypes","UniversityView","connect","fetchUni","Landpage","props","localState","modalOpen","details","dispatch","openSelection","e","selected","currentTarget","value","data","universities","find","x","_id","setState","handleModalOpen","clearSelected","prevState","loading","map","obj","index","name","scores","points","total","protoTypes","func","isRequired","mapStateToProps","state","uniFetch"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUni } from '../../actions/university';\r\n\r\n\r\n\r\nconst Landpage = (props) => {\r\n\r\n    const localState = useState({\r\n        modalOpen: false,\r\n        details: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.dispatch(fetchUni());\r\n    }, []);\r\n\r\n    const openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = props.universities.find(x => x._id === selected);\r\n        localState.setState({ details: data });\r\n        handleModalOpen();\r\n    }\r\n\r\n    const clearSelected = () => {\r\n        localState.setState({ details: null })\r\n    }\r\n\r\n    const handleModalOpen = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        (!props.loading ? (\r\n            < Fragment >\r\n                <Fragment>\r\n                    <UniversityView\r\n                        details={localState.details}\r\n                        // selected={this.state.selectedUni}\r\n                        currentState={modalOpen}\r\n                        handleModalOpen={handleModalOpen}\r\n                        clearSelected={clearSelected}>\r\n                    </UniversityView >\r\n                </Fragment>\r\n                < div className=\"container\" >\r\n                    <section className=\"landing\">\r\n                        {props.universities.map((obj, index) => {\r\n                            return <button key={index} value={obj._id} onClick={e => { this.openSelection(e) }}>\r\n                                <div className=\"university\" key={index}>\r\n                                    <div className=\"name\" key={obj._id}>{obj.name}</div>\r\n                                    {obj.scores.map((points) => {\r\n                                        return <div className=\"points\" key={index}> {points.total} </div>\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n                            </button>\r\n                        })}\r\n                    </section>\r\n                </div >\r\n            </Fragment >\r\n        ) : (<div><h1>LOADING</h1></div>))\r\n    )\r\n}\r\n\r\n\r\nLandpage.protoTypes = {\r\n    fetchUni: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.uniFetch.loading,\r\n        universities: state.uniFetch.universities\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}