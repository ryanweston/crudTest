{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState, onChange } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/login';\nimport PropTypes from 'prop-types';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nconst Login = ({\n  login\n}) => {\n  console.log(localStorage);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const changeState = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  }); // const captcha = document.querySelector('#g-recaptcha-response').value;\n\n\n  let captcha;\n\n  async function loginSubmit(e) {\n    e.preventDefault();\n    const captcha = recaptchaRef.current.getValue();\n    const loginUser = {\n      email,\n      password,\n      captcha\n    };\n    login(loginUser);\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"login\",\n    onSubmit: e => loginSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    onChange: e => changeState(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    onChange: e => changeState(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    ref: el => {\n      recaptchaRef = el;\n    },\n    sitekey: \"6Le3m_MUAAAAAGGupKFXSTuNEIBjwAB486DNz6NYy\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })));\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  login\n})(Login);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Login.js"],"names":["React","useState","onChange","connect","login","PropTypes","ReCAPTCHA","Login","console","log","localStorage","formData","setFormData","email","password","changeState","e","target","name","value","captcha","loginSubmit","preventDefault","recaptchaRef","current","getValue","loginUser","el","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAe;AAEzBI,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACrCY,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,QAA5B;;AAEA,QAAMI,WAAW,GAAIC,CAAD,IAAOJ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CAAtC,CAXyB,CAazB;;;AACA,MAAIC,OAAJ;;AAEA,iBAAeC,WAAf,CAA2BL,CAA3B,EAA8B;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AAEA,UAAMF,OAAO,GAAGG,YAAY,CAACC,OAAb,CAAqBC,QAArB,EAAhB;AAEA,UAAMC,SAAS,GAAG;AACdb,MAAAA,KADc;AAEdC,MAAAA,QAFc;AAGdM,MAAAA;AAHc,KAAlB;AAKAhB,IAAAA,KAAK,CAACsB,SAAD,CAAL;AACH;;AAED,sBACI;AAAS,IAAA,SAAS,EAAC,OAAnB;AAA2B,IAAA,QAAQ,EAAEV,CAAC,IAAIK,WAAW,CAACL,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,QAAQ,EAAGA,CAAD,IAAOD,WAAW,CAACC,CAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,QAAQ,EAAGA,CAAD,IAAOD,WAAW,CAACC,CAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,SAAD;AACI,IAAA,GAAG,EAAEW,EAAE,IAAI;AAAEJ,MAAAA,YAAY,GAAGI,EAAf;AAAmB,KADpC;AAEI,IAAA,OAAO,EAAC,2CAFZ;AAGI,IAAA,QAAQ,EAAEzB,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAUI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,CADJ;AAgBH,CA7CD;;AA+CAK,KAAK,CAACqB,SAAN,GAAkB;AACdxB,EAAAA,KAAK,EAAEC,SAAS,CAACwB,IAAV,CAAeC;AADR,CAAlB;AAIA,eAAe3B,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAyBG,KAAzB,CAAf","sourcesContent":["import React, { useState, onChange } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../actions/login';\r\nimport PropTypes from 'prop-types';\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nconst Login = ({ login }) => {\r\n\r\n    console.log(localStorage);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { email, password } = formData;\r\n\r\n    const changeState = (e) => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    // const captcha = document.querySelector('#g-recaptcha-response').value;\r\n    let captcha;\r\n\r\n    async function loginSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const captcha = recaptchaRef.current.getValue();\r\n\r\n        const loginUser = {\r\n            email,\r\n            password,\r\n            captcha\r\n        }\r\n        login(loginUser);\r\n    }\r\n\r\n    return (\r\n        <section className=\"login\" onSubmit={e => loginSubmit(e)}>\r\n            <form>\r\n                <label>Email</label>\r\n                <input name=\"email\" type=\"email\" onChange={(e) => changeState(e)} />\r\n                <label>Password</label>\r\n                <input name=\"password\" type=\"password\" onChange={(e) => changeState(e)} />\r\n                <ReCAPTCHA\r\n                    ref={el => { recaptchaRef = el }}\r\n                    sitekey=\"6Le3m_MUAAAAAGGupKFXSTuNEIBjwAB486DNz6NYy\"\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { login })(Login);\r\n"]},"metadata":{},"sourceType":"module"}