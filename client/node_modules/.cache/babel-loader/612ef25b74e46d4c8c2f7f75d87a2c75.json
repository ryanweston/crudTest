{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../actions/dashboard';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\n\nconst Dashboard = props => {\n  useEffect(() => {\n    props.getUserInfo();\n    console.log(props.userName);\n  }, []);\n  console.log(props.userReview);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, props.dashLoading && props.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"LOADING...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, props.userName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, props.userEmail), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, props.userUniversity), /*#__PURE__*/React.createElement(Review, {\n    scores: props.userReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    isAuthenticated: state.register.isAuthenticated,\n    userName: state.register.user.name,\n    loading: state.register.loading,\n    //From dashboard state\n    dashLoading: state.dashboard.loading,\n    userEmail: state.dashboard.email,\n    userUniversity: state.dashboard.university,\n    userReview: state.dashboard.review[0]\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserInfo\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","connect","getUserInfo","PropTypes","Review","Dashboard","props","console","log","userName","userReview","dashLoading","loading","userEmail","userUniversity","mapStateToProps","state","isAuthenticated","register","user","name","dashboard","email","university","review","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzBP,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAACJ,WAAN;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,UAAlB;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMJ,KAAK,CAACK,WAAN,IAAqBL,KAAK,CAACM,OAA3B,gBAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADoC,CAAtC,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAK,CAACG,QAAX,CADC,eAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACO,SAAV,CAFC,eAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,KAAK,CAACQ,cAAV,CAHC,eAID,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAER,KAAK,CAACI,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJC,CAJT,CADJ;AAcH,CAvBD;;AAyBA,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH;AACAC,IAAAA,eAAe,EAAED,KAAK,CAACE,QAAN,CAAeD,eAF7B;AAGHR,IAAAA,QAAQ,EAAEO,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,IAH3B;AAIHR,IAAAA,OAAO,EAAEI,KAAK,CAACE,QAAN,CAAeN,OAJrB;AAKH;AACAD,IAAAA,WAAW,EAAEK,KAAK,CAACK,SAAN,CAAgBT,OAN1B;AAOHC,IAAAA,SAAS,EAAEG,KAAK,CAACK,SAAN,CAAgBC,KAPxB;AAQHR,IAAAA,cAAc,EAAEE,KAAK,CAACK,SAAN,CAAgBE,UAR7B;AASHb,IAAAA,UAAU,EAAEM,KAAK,CAACK,SAAN,CAAgBG,MAAhB,CAAuB,CAAvB;AATT,GAAP;AAWH,CAZD;;AAcAnB,SAAS,CAACoB,SAAV,GAAsB;AAClBvB,EAAAA,WAAW,EAAEC,SAAS,CAACuB,IAAV,CAAeC;AADV,CAAtB;AAKA,eAAe1B,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,SAA1C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/dashboard';\r\nimport PropTypes from 'prop-types';\r\nimport Review from './Review';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getUserInfo();\r\n        console.log(props.userName);\r\n    }, [])\r\n\r\n    console.log(props.userReview);\r\n\r\n    return (\r\n        <Fragment>\r\n            {(props.dashLoading && props.loading ? (<div>\r\n                <h1>LOADING...</h1>\r\n            </div>\r\n            ) : (<div>\r\n                <h1>{props.userName}</h1>\r\n                <p>{props.userEmail}</p>\r\n                <p>{props.userUniversity}</p>\r\n                <Review scores={props.userReview} />\r\n            </div>\r\n                ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        isAuthenticated: state.register.isAuthenticated,\r\n        userName: state.register.user.name,\r\n        loading: state.register.loading,\r\n        //From dashboard state\r\n        dashLoading: state.dashboard.loading,\r\n        userEmail: state.dashboard.email,\r\n        userUniversity: state.dashboard.university,\r\n        userReview: state.dashboard.review[0]\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo })(Dashboard);"]},"metadata":{},"sourceType":"module"}