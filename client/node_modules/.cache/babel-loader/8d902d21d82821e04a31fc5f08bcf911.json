{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../actions/dashboard';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\n\nconst Dashboard = ({\n  getUserInfo,\n  user,\n  auth\n}) => {\n  // const [deleteCheck, handleDelete] = useState({\n  //     delete: false\n  // });\n  useEffect(() => {\n    //Ensures getUser has been called first, setting loading to false to prevent race conditions\n    if (auth.loading === false) {\n      getUserInfo();\n    }\n  }, [getUserInfo, auth.loading]); // const callPopup = handleDelete((prevState) => { return { delete: !prevState.delete } });\n  // const deleteReview = () => {\n  // }\n  // console.log(user.review.scores.internet);\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, user.loading && auth.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"LOADING...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Profile Information:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, auth.user.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, user.university)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), !user.review ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Submit a review\"))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Your current review:\"), /*#__PURE__*/React.createElement(Review, {\n    scores: user.review.scores,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"Edit review\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Delete Review\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    auth: state.register,\n    //From dashboard state\n    user: state.dashboard\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserInfo\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","useState","Link","connect","getUserInfo","PropTypes","Review","Dashboard","user","auth","loading","name","email","university","review","scores","mapStateToProps","state","register","dashboard","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/dashboard';\r\nimport PropTypes from 'prop-types';\r\nimport Review from './Review';\r\n\r\nconst Dashboard = ({ getUserInfo, user, auth }) => {\r\n\r\n    // const [deleteCheck, handleDelete] = useState({\r\n    //     delete: false\r\n    // });\r\n\r\n    useEffect(() => {\r\n        //Ensures getUser has been called first, setting loading to false to prevent race conditions\r\n        if (auth.loading === false) {\r\n            getUserInfo()\r\n        }\r\n    }, [getUserInfo, auth.loading]);\r\n\r\n    // const callPopup = handleDelete((prevState) => { return { delete: !prevState.delete } });\r\n\r\n    // const deleteReview = () => {\r\n\r\n    // }\r\n    // console.log(user.review.scores.internet);\r\n\r\n    return (\r\n        <Fragment>\r\n            {(user.loading && auth.loading ? (<div>\r\n                <h1>LOADING...</h1>\r\n            </div>\r\n            ) : (<div>\r\n                <h1>Profile Information:</h1>\r\n                <p>{auth.user.name}</p>\r\n                <p>{user.email}</p>\r\n                <p>{user.university}</p>\r\n            </div>\r\n                ))}\r\n            <br />\r\n            {(!user.review ? (<Link to=\"/submit\">\r\n                <button><h1>Submit a review</h1></button>\r\n            </Link>) : (<Fragment>\r\n                {/* {(deleteCheck.delete === false ? (<Fragment></Fragment>) : (<div>\r\n                    <p>Are you sure you want to delete?</p>\r\n                    <button>Yes</button>\r\n                    <button>No</button>\r\n                </div>))} */}\r\n                <h1>Your current review:</h1>\r\n                <Review scores={user.review.scores} />\r\n                <Link to=\"/submit\">\r\n                    <button><h1>Edit review</h1></button>\r\n                </Link>\r\n                <br />\r\n                <Link >\r\n                    <button><h1>Delete Review</h1></button>\r\n                </Link>\r\n            </Fragment>))}\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        auth: state.register,\r\n        //From dashboard state\r\n        user: state.dashboard\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo })(Dashboard);"]},"metadata":{},"sourceType":"module"}