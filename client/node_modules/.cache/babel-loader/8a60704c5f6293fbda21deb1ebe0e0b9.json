{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../actions/dashboard';\nimport { getUser } from '../../actions/login';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\nimport register from '../../reducers/register';\n\nconst Dashboard = ({\n  getUserInfo,\n  user,\n  auth\n}) => {\n  useEffect(() => {\n    getUser().then(getUserInfo(user.loading));\n  }, [getUserInfo, user.loading]); // console.log(props.userReview);\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, user.loading && auth.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"LOADING...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, user.email)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    auth: state.register,\n    //From dashboard state\n    user: state.dashboard\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserInfo,\n  getUser\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","connect","getUserInfo","getUser","PropTypes","Review","register","Dashboard","user","auth","then","loading","email","mapStateToProps","state","dashboard","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEL,EAAAA,WAAF;AAAeM,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAD,KAAiC;AAE/CV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,GACFO,IADL,CACUR,WAAW,CAACM,IAAI,CAACG,OAAN,CADrB;AAEH,GAHQ,EAGN,CAACT,WAAD,EAAcM,IAAI,CAACG,OAAnB,CAHM,CAAT,CAF+C,CAO/C;;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,IAAI,CAACG,OAAL,IAAgBF,IAAI,CAACE,OAArB,gBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD8B,CAAhC,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,KAAT,CAFC,CAJT,CADJ;AAcH,CAvBD;;AAyBA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH;AACAL,IAAAA,IAAI,EAAEK,KAAK,CAACR,QAFT;AAGH;AACAE,IAAAA,IAAI,EAAEM,KAAK,CAACC;AAJT,GAAP;AAMH,CAPD;;AASAR,SAAS,CAACS,SAAV,GAAsB;AAClBd,EAAAA,WAAW,EAAEE,SAAS,CAACa,IAAV,CAAeC;AADV,CAAtB;AAKA,eAAejB,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAmDI,SAAnD,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/dashboard';\r\nimport { getUser } from '../../actions/login';\r\nimport PropTypes from 'prop-types';\r\nimport Review from './Review';\r\nimport register from '../../reducers/register';\r\n\r\nconst Dashboard = ({ getUserInfo, user, auth }) => {\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n            .then(getUserInfo(user.loading));\r\n    }, [getUserInfo, user.loading])\r\n\r\n    // console.log(props.userReview);\r\n\r\n    return (\r\n        <Fragment>\r\n            {(user.loading && auth.loading ? (<div>\r\n                <h1>LOADING...</h1>\r\n            </div>\r\n            ) : (<div>\r\n                {/* <h1>{userName}</h1> */}\r\n                <p>{user.email}</p>\r\n                {/* <p>{userUniversity}</p>\r\n                <Review scores={userReview} /> */}\r\n            </div>\r\n                ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        auth: state.register,\r\n        //From dashboard state\r\n        user: state.dashboard\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo, getUser })(Dashboard);"]},"metadata":{},"sourceType":"module"}