{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment, useState } from 'react';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux';\nimport images from './images.js';\nimport SortDropdown from './SortDropdown';\n\nconst Landpage = props => {\n  const [modalInfo, modalChange] = useState({\n    modalOpen: false,\n    details: null\n  });\n  const [sort, sortSelect] = useState({\n    type: 'total'\n  });\n\n  const openSelection = e => {\n    const selected = e.currentTarget.value;\n    const data = universityCheck.find(x => x._id === selected);\n    handleModalOpen(data); // modalChange({ ...modalInfo, details: data })\n  };\n\n  const handleModalOpen = data => {\n    modalChange(prevState => {\n      return {\n        modalOpen: !prevState.modalOpen,\n        details: data\n      };\n    });\n  };\n\n  const changeSort = e => sortSelect({\n    selected: e.target.value\n  });\n\n  console.log(modalInfo);\n  const universityCheck = [];\n\n  if (!props.loading) {\n    function universityChecker() {\n      for (var i = 0; i < props.universities[0].length; i++) {\n        var obj = props.universities[0][i];\n        universityCheck.push(obj);\n      }\n    }\n\n    function sortBy(type) {\n      return function (a, b) {\n        return a.scores[type] > b.scores[type] ? -1 : 1;\n      };\n    }\n\n    universityChecker();\n    universityCheck.sort(sortBy(sort.type));\n  }\n\n  console.log(sort);\n  return (//Renders landpage after app level state fetch has been returned\n    !props.loading ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(UniversityView, {\n      details: modalInfo.details,\n      currentState: modalInfo.modalOpen,\n      handleModalOpen: handleModalOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"FIND YOUR UNIVERSITY BASED ON SOCIAL SCORE & QUALITY OF LIFE FEEDBACK FROM REAL STUDENTS\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SortDropdown, {\n      sortChange: changeSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"landing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, universityCheck.map((obj, index) => {\n      const uniImage = images.filter(images => images.id === obj.img);\n      console.log(universityCheck);\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"universityContainer\",\n        key: index,\n        value: obj._id,\n        onClick: e => {\n          openSelection(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: uniImage[0].src,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        key: obj._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }, \"#\", index + 1, \"  \", obj.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"points\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 70\n        }\n      }, obj.scores.total.toFixed(2), \" / 5\"), \" \"));\n    })))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, \"LOADING\"))\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.uniFetch.loading,\n    universities: state.uniFetch.universities\n  };\n};\n\nexport default connect(mapStateToProps)(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","useState","UniversityView","connect","images","SortDropdown","Landpage","props","modalInfo","modalChange","modalOpen","details","sort","sortSelect","type","openSelection","e","selected","currentTarget","value","data","universityCheck","find","x","_id","handleModalOpen","prevState","changeSort","target","console","log","loading","universityChecker","i","universities","length","obj","push","sortBy","a","b","scores","map","index","uniImage","filter","id","img","src","name","total","toFixed","mapStateToProps","state","uniFetch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\nimport images from './images.js';\r\nimport SortDropdown from './SortDropdown';\r\n\r\nconst Landpage = (props) => {\r\n\r\n    const [modalInfo, modalChange] = useState({\r\n        modalOpen: false,\r\n        details: null,\r\n\r\n    })\r\n\r\n    const [sort, sortSelect] = useState({\r\n        type: 'total'\r\n    });\r\n\r\n    const openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = universityCheck.find(x => x._id === selected);\r\n        handleModalOpen(data);\r\n        // modalChange({ ...modalInfo, details: data })\r\n    }\r\n\r\n    const handleModalOpen = (data) => {\r\n        modalChange((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n                details: data\r\n            }\r\n        })\r\n    }\r\n\r\n    const changeSort = (e) => sortSelect({ selected: e.target.value })\r\n\r\n    console.log(modalInfo);\r\n    const universityCheck = [];\r\n    if (!props.loading) {\r\n        function universityChecker() {\r\n            for (var i = 0; i < props.universities[0].length; i++) {\r\n                var obj = props.universities[0][i];\r\n                universityCheck.push(obj);\r\n            }\r\n        }\r\n\r\n        function sortBy(type) {\r\n            return function (a, b) {\r\n                return a.scores[type] > b.scores[type] ? -1 : 1;\r\n            }\r\n        }\r\n        universityChecker();\r\n\r\n\r\n        universityCheck.sort(sortBy(sort.type));\r\n\r\n    }\r\n\r\n    console.log(sort);\r\n\r\n    return (\r\n        //Renders landpage after app level state fetch has been returned\r\n        (!props.loading ? (\r\n            < Fragment >\r\n                <Fragment>\r\n                    <UniversityView\r\n                        details={modalInfo.details}\r\n                        currentState={modalInfo.modalOpen}\r\n                        handleModalOpen={handleModalOpen}>\r\n                    </UniversityView >\r\n                </Fragment>\r\n                <div className=\"header\">\r\n                    <h1>FIND YOUR UNIVERSITY BASED ON SOCIAL SCORE & QUALITY OF LIFE FEEDBACK FROM REAL STUDENTS</h1>\r\n                </div>\r\n                <div>\r\n                    <SortDropdown sortChange={changeSort} />\r\n                </div>\r\n                < div className=\"gridContainer\" >\r\n                    <section className=\"landing\">\r\n                        {universityCheck.map((obj, index) => {\r\n                            const uniImage = images.filter(images => images.id === obj.img);\r\n                            console.log(universityCheck);\r\n                            return <button className=\"universityContainer\" key={index} value={obj._id} onClick={e => { openSelection(e) }}>\r\n                                <img src={uniImage[0].src}></img>\r\n                                <div className=\"name\" key={obj._id}>\r\n                                    <p>#{index + 1}  {obj.name}</p>\r\n                                </div>\r\n                                <div className=\"points\" key={index}> <b>{obj.scores.total.toFixed(2)} / 5</b> </div>\r\n                            </button>\r\n                        })}\r\n                    </section>\r\n                </div >\r\n            </Fragment >\r\n        ) : (<div><h1>LOADING</h1></div>))\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.uniFetch.loading,\r\n        universities: state.uniFetch.universities\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}