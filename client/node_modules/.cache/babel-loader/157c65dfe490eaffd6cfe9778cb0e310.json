{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../actions/dashboard';\nimport PropTypes from 'prop-types';\nimport Review from './Review';\n\nconst Dashboard = props => {\n  useEffect(() => {\n    props.getUserInfo();\n    console.log(props.userName);\n  });\n  console.log(props.userReview);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, props.userName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, props.userEmail), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, props.userUniversity), /*#__PURE__*/React.createElement(Review, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // From intial login/registration state\n    isAuthenticated: state.register.isAuthenticated,\n    loading: state.register.loading,\n    userName: state.register.user.name,\n    //From dashboard state\n    userEmail: state.dashboard.email,\n    userUniversity: state.dashboard.university,\n    userReview: state.dashboard.review\n  };\n};\n\nDashboard.propTypes = {\n  getUserInfo: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getUserInfo\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/Dashboard.js"],"names":["React","useEffect","Fragment","connect","getUserInfo","PropTypes","Review","Dashboard","props","console","log","userName","userReview","userEmail","userUniversity","mapStateToProps","state","isAuthenticated","register","loading","user","name","dashboard","email","university","review","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzBP,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAACJ,WAAN;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACH,GAHQ,CAAT;AAKAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,UAAlB;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACG,QAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACK,SAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACM,cAAV,CAHJ,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAjBD;;AAmBA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH;AACAC,IAAAA,eAAe,EAAED,KAAK,CAACE,QAAN,CAAeD,eAF7B;AAGHE,IAAAA,OAAO,EAAEH,KAAK,CAACE,QAAN,CAAeC,OAHrB;AAIHR,IAAAA,QAAQ,EAAEK,KAAK,CAACE,QAAN,CAAeE,IAAf,CAAoBC,IAJ3B;AAKH;AACAR,IAAAA,SAAS,EAAEG,KAAK,CAACM,SAAN,CAAgBC,KANxB;AAOHT,IAAAA,cAAc,EAAEE,KAAK,CAACM,SAAN,CAAgBE,UAP7B;AAQHZ,IAAAA,UAAU,EAAEI,KAAK,CAACM,SAAN,CAAgBG;AARzB,GAAP;AAUH,CAXD;;AAaAlB,SAAS,CAACmB,SAAV,GAAsB;AAClBtB,EAAAA,WAAW,EAAEC,SAAS,CAACsB,IAAV,CAAeC;AADV,CAAtB;AAKA,eAAezB,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,SAA1C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInfo } from '../../actions/dashboard';\r\nimport PropTypes from 'prop-types';\r\nimport Review from './Review';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getUserInfo();\r\n        console.log(props.userName);\r\n    })\r\n\r\n    console.log(props.userReview);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>{props.userName}</h1>\r\n            <p>{props.userEmail}</p>\r\n            <p>{props.userUniversity}</p>\r\n            <Review />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // From intial login/registration state\r\n        isAuthenticated: state.register.isAuthenticated,\r\n        loading: state.register.loading,\r\n        userName: state.register.user.name,\r\n        //From dashboard state\r\n        userEmail: state.dashboard.email,\r\n        userUniversity: state.dashboard.university,\r\n        userReview: state.dashboard.review\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getUserInfo })(Dashboard);"]},"metadata":{},"sourceType":"module"}