{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment, useEffect } from 'react'; // import { Link } from 'react-router-dom';\n// import axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux';\nimport { fetchUni } from '../../actions/university';\n\nconst Landpage = props => {\n  useEffect(() => {\n    props.dispatch(fetchUni());\n  }, []);\n\n  const openSelection = e => {\n    const selected = e.currentTarget.value;\n    const data = props.universities.find(x => x._id === selected);\n    this.setState({\n      details: data\n    });\n    this.handleModalOpen();\n  };\n\n  const clearSelected = () => {\n    this.setState({\n      details: null\n    });\n  };\n\n  const handleModalOpen = () => {\n    this.setState(prevState => {\n      return {\n        modalOpen: !prevState.modalOpen\n      };\n    });\n  };\n\n  return !props.loading ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UniversityView, {\n    details: this.state.details // selected={this.state.selectedUni}\n    ,\n    currentState: this.state.modalOpen,\n    handleModalOpen: this.handleModalOpen,\n    clearSelected: this.clearSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    key: universities,\n    className: \"landing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, universities.map((obj, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      value: obj._id,\n      onClick: e => {\n        this.openSelection(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"university\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      key: obj._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, obj.name), obj.scores.map(points => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"points\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 48\n        }\n      }, \" \", points.total, \" \");\n    })));\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"LOADING\"));\n};\n\nLandpage.protoTypes = {\n  fetchUni: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.uniFetch.loading,\n    universities: state.uniFetch.universities\n  };\n};\n\nexport default connect(mapStateToProps)(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","useEffect","PropTypes","UniversityView","connect","fetchUni","Landpage","props","dispatch","openSelection","e","selected","currentTarget","value","data","universities","find","x","_id","setState","details","handleModalOpen","clearSelected","prevState","modalOpen","loading","state","map","obj","index","name","scores","points","total","protoTypes","func","isRequired","mapStateToProps","uniFetch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExBN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACC,QAAN,CAAeH,QAAQ,EAAvB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMI,aAAa,GAAIC,CAAD,IAAO;AACzB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAAjC;AACA,UAAMC,IAAI,GAAGP,KAAK,CAACQ,YAAN,CAAmBC,IAAnB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUP,QAAvC,CAAb;AACA,SAAKQ,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEN;AAAX,KAAd;AACA,SAAKO,eAAL;AACH,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AACxB,SAAKH,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1B,SAAKF,QAAL,CAAeI,SAAD,IAAe;AACzB,aAAO;AACHC,QAAAA,SAAS,EAAE,CAACD,SAAS,CAACC;AADnB,OAAP;AAGH,KAJD;AAKH,GAND;;AAQA,SACK,CAACjB,KAAK,CAACkB,OAAP,gBACG,oBAAE,QAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,OAAO,EAAE,KAAKC,KAAL,CAAWN,OADxB,CAEI;AAFJ;AAGI,IAAA,YAAY,EAAE,KAAKM,KAAL,CAAWF,SAH7B;AAII,IAAA,eAAe,EAAE,KAAKH,eAJ1B;AAKI,IAAA,aAAa,EAAE,KAAKC,aALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAUI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAS,IAAA,GAAG,EAAEP,YAAd;AAA4B,IAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,CAACY,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,wBAAO;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,GAAG,CAACV,GAA/B;AAAoC,MAAA,OAAO,EAAER,CAAC,IAAI;AAAE,aAAKD,aAAL,CAAmBC,CAAnB;AAAuB,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEmB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAED,GAAG,CAACV,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCU,GAAG,CAACE,IAAzC,CADJ,EAEKF,GAAG,CAACG,MAAJ,CAAWJ,GAAX,CAAgBK,MAAD,IAAY;AACxB,0BAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,GAAG,EAAEH,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsCG,MAAM,CAACC,KAA7C,MAAP;AACH,KAFA,CAFL,CADG,CAAP;AASH,GAVA,CADL,CADJ,CAVJ,CADH,gBA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,CA5BT;AA8BH,CAvDD;;AA0DA3B,QAAQ,CAAC4B,UAAT,GAAsB;AAClB7B,EAAAA,QAAQ,EAAEH,SAAS,CAACiC,IAAV,CAAeC;AADP,CAAtB;;AAIA,MAAMC,eAAe,GAAGX,KAAK,IAAI;AAC7B,SAAO;AACHD,IAAAA,OAAO,EAAEC,KAAK,CAACY,QAAN,CAAeb,OADrB;AAEHV,IAAAA,YAAY,EAAEW,KAAK,CAACY,QAAN,CAAevB;AAF1B,GAAP;AAIH,CALD;;AAOA,eAAeX,OAAO,CAACiC,eAAD,CAAP,CAAyB/B,QAAzB,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUni } from '../../actions/university';\r\n\r\n\r\n\r\nconst Landpage = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.dispatch(fetchUni());\r\n    }, []);\r\n\r\n    const openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = props.universities.find(x => x._id === selected);\r\n        this.setState({ details: data });\r\n        this.handleModalOpen();\r\n    }\r\n\r\n    const clearSelected = () => {\r\n        this.setState({ details: null })\r\n    }\r\n\r\n    const handleModalOpen = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        (!props.loading ? (\r\n            < Fragment >\r\n                <Fragment>\r\n                    <UniversityView\r\n                        details={this.state.details}\r\n                        // selected={this.state.selectedUni}\r\n                        currentState={this.state.modalOpen}\r\n                        handleModalOpen={this.handleModalOpen}\r\n                        clearSelected={this.clearSelected}>\r\n                    </UniversityView >\r\n                </Fragment>\r\n                < div className=\"container\" >\r\n                    <section key={universities} className=\"landing\">\r\n                        {universities.map((obj, index) => {\r\n                            return <button key={index} value={obj._id} onClick={e => { this.openSelection(e) }}>\r\n                                <div className=\"university\" key={index}>\r\n                                    <div className=\"name\" key={obj._id}>{obj.name}</div>\r\n                                    {obj.scores.map((points) => {\r\n                                        return <div className=\"points\" key={index}> {points.total} </div>\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n                            </button>\r\n                        })}\r\n                    </section>\r\n                </div >\r\n            </Fragment >\r\n        ) : (<div><h1>LOADING</h1></div>))\r\n    )\r\n}\r\n\r\n\r\nLandpage.protoTypes = {\r\n    fetchUni: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.uniFetch.loading,\r\n        universities: state.uniFetch.universities\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}