{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAILURE, LOGIN_SUCCESS, LOGIN_FAILURE } from '../actions/types'; //Fetches token to mainatain session, store.js deals with issue of having no token and will check \n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: {}\n};\nexport default function (state = initialState, actions) {\n  const {\n    type,\n    payload\n  } = actions;\n\n  switch (type) {\n    case REGISTER_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case REGISTER_SUCCESS:\n      console.log(payload.token);\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case LOGIN_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case GET_USER:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: {\n          name: payload.name\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/reducers/register.js"],"names":["REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","initialState","token","localStorage","getItem","isAuthenticated","loading","user","state","actions","type","payload","removeItem","console","log","setItem","GET_USER","name"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,aAHJ,EAIIC,aAJJ,QAKO,kBALP,C,CAOA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,IAFA;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,OAAhC,EAAyC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,OAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKZ,gBAAL;AACIK,MAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKT,gBAAL;AACIgB,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACT,KAApB;AACAC,MAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAACT,KAAtC;AACA,aAAO,EACH,GAAGM,KADA;AAEH,WAAGG,OAFA;AAGHN,QAAAA,eAAe,EAAE,IAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKP,aAAL;AACII,MAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAACT,KAAtC;AACA,aAAO,EACH,GAAGM,KADA;AAEH,WAAGG,OAFA;AAGHN,QAAAA,eAAe,EAAE,IAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKN,aAAL;AACIG,MAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKU,QAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHH,QAAAA,eAAe,EAAE,IAFd;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,IAAI,EAAE;AACFU,UAAAA,IAAI,EAAEN,OAAO,CAACM;AADZ;AAJH,OAAP;;AAQJ;AACI,aAAOT,KAAP;AA5CR;AA8CH","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n} from '../actions/types';\r\n\r\n//Fetches token to mainatain session, store.js deals with issue of having no token and will check \r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: {}\r\n};\r\n\r\nexport default function (state = initialState, actions) {\r\n    const { type, payload } = actions;\r\n\r\n    switch (type) {\r\n        case REGISTER_FAILURE:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            console.log(payload.token);\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case LOGIN_FAILURE:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            }\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: {\r\n                    name: payload.name,\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}