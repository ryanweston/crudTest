{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\auth\\\\UniversityList.js\";\nimport React from 'react'; // import axios from 'axios';\n// Move data fetching to parent component and pass data down through the use of props\n// Research into redux store for state management\n\nclass UniversityList extends React.Component {\n  // state = {\n  //     loading: true,\n  //     options: [null],\n  //     selected: ''\n  // }\n  // componentDidMount function is called once after all the components and subcomponents have been rendered\n  // best to make api calls within this react function as given component will have alread been mounted\n  // and everything will be available to the DOM.\n  // async componentDidMount() {\n  //     const response = await axios.get('/api/university');\n  //     // Recieved errors in get reponse, had to convert to string to place in JS object array.\n  //     const string = JSON.stringify(response.data.list);\n  //     const uni = JSON.parse(string);\n  //     // Fills options with JSON request then sets loading to false which can be checked against\n  //     this.setState({ options: uni, loading: false });\n  //     console.log(this.state.options);\n  // }\n  render() {\n    // if (this.props.state.loading === false) {\n    //     console.log(this.props.state);\n    // }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, this.props.state.loading || !this.props.state.options ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.props.onValueChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, // map takes in the recieved university data, for each producing an option for the dropdown\n    this.props.state.options.map(obj => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: obj._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 36\n        }\n      }, obj.name);\n    }))));\n  }\n\n}\n\nexport default UniversityList;","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/auth/UniversityList.js"],"names":["React","UniversityList","Component","render","props","state","loading","options","e","onValueChange","map","obj","_id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AACA;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAEzC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,IAA4B,CAAC,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,OAA9C,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAQ,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKJ,KAAL,CAAWK,aAAX,CAAyBD,CAAzB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,SAAKJ,KAAL,CAAWC,KAAX,CAAiBE,OAAjB,CAAyBG,GAAzB,CAA8BC,GAAD,IAAS;AAClC,0BAAO;AAAQ,QAAA,KAAK,EAAEA,GAAG,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBD,GAAG,CAACE,IAA7B,CAAP;AACH,KAFD,CAFJ,CADC,CAHT,CAFJ;AAmBH;;AA7CwC;;AAgD7C,eAAeZ,cAAf","sourcesContent":["import React from 'react';\r\n// import axios from 'axios';\r\n\r\n// Move data fetching to parent component and pass data down through the use of props\r\n// Research into redux store for state management\r\n\r\nclass UniversityList extends React.Component {\r\n\r\n    // state = {\r\n    //     loading: true,\r\n    //     options: [null],\r\n    //     selected: ''\r\n    // }\r\n\r\n    // componentDidMount function is called once after all the components and subcomponents have been rendered\r\n    // best to make api calls within this react function as given component will have alread been mounted\r\n    // and everything will be available to the DOM.\r\n    // async componentDidMount() {\r\n    //     const response = await axios.get('/api/university');\r\n    //     // Recieved errors in get reponse, had to convert to string to place in JS object array.\r\n    //     const string = JSON.stringify(response.data.list);\r\n    //     const uni = JSON.parse(string);\r\n    //     // Fills options with JSON request then sets loading to false which can be checked against\r\n    //     this.setState({ options: uni, loading: false });\r\n    //     console.log(this.state.options);\r\n    // }\r\n\r\n\r\n    render() {\r\n        // if (this.props.state.loading === false) {\r\n        //     console.log(this.props.state);\r\n        // }\r\n        return (\r\n\r\n            <div>\r\n                {this.props.state.loading || !this.props.state.options ? (\r\n                    <div>loading...</div>\r\n                ) : (<div>\r\n                    <select onChange={e => this.props.onValueChange(e)}>{\r\n                        // map takes in the recieved university data, for each producing an option for the dropdown\r\n                        this.props.state.options.map((obj) => {\r\n                            return <option value={obj._id}>{obj.name}</option>\r\n                        }\r\n                        )\r\n                    }</select>\r\n                </div>)\r\n                }\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default UniversityList;"]},"metadata":{},"sourceType":"module"}