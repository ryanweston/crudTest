{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanl\\\\Desktop\\\\crudTest\\\\client\\\\src\\\\components\\\\template\\\\Landpage.js\";\nimport React, { Fragment, useState } from 'react'; // import { Link } from 'react-router-dom';\n// import axios from 'axios';\n\nimport PropTypes from 'prop-types';\nimport UniversityView from './UniversityView';\nimport { connect } from 'react-redux'; // CHANGE STATES TO HOOKS DUE TO BEING FUNCTIONAL COMPONENT\n// MOVE FETCH UNI INTO APP TO PREVENT DATA FETCHING CONSTANTLY ON RERENDER AND PASS\n//THROUGH PROPS\n\nconst Landpage = props => {\n  const [modalInfo, modalChange] = useState({\n    modalOpen: false,\n    details: null\n  });\n\n  const openSelection = e => {\n    const selected = e.currentTarget.value;\n    const data = props.universities[0].find(x => x._id === selected);\n    handleModalOpen(data); // modalChange({ ...modalInfo, details: data })\n  };\n\n  const handleModalOpen = data => {\n    modalChange(prevState => {\n      return {\n        modalOpen: !prevState.modalOpen,\n        details: data\n      };\n    });\n  };\n\n  console.log(modalInfo);\n  return !props.loading ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UniversityView, {\n    details: modalInfo.details // selected={this.state.selectedUni}\n    ,\n    currentState: modalInfo.modalOpen,\n    handleModalOpen: handleModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"landing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, props.universities[0].map((obj, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      value: obj._id,\n      onClick: e => {\n        openSelection(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"university\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      key: obj._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, obj.name), obj.scores.map(points => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"points\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 48\n        }\n      }, \" \", points.total, \" \");\n    })));\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"LOADING\"));\n};\n\nLandpage.protoTypes = {\n  fetchUni: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.uniFetch.loading,\n    universities: state.uniFetch.universities\n  };\n};\n\nexport default connect(mapStateToProps)(Landpage);","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/components/template/Landpage.js"],"names":["React","Fragment","useState","PropTypes","UniversityView","connect","Landpage","props","modalInfo","modalChange","modalOpen","details","openSelection","e","selected","currentTarget","value","data","universities","find","x","_id","handleModalOpen","prevState","console","log","loading","map","obj","index","name","scores","points","total","protoTypes","fetchUni","func","isRequired","mapStateToProps","state","uniFetch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport UniversityView from './UniversityView';\r\nimport { connect } from 'react-redux';\r\n\r\n// CHANGE STATES TO HOOKS DUE TO BEING FUNCTIONAL COMPONENT\r\n// MOVE FETCH UNI INTO APP TO PREVENT DATA FETCHING CONSTANTLY ON RERENDER AND PASS\r\n//THROUGH PROPS\r\n\r\nconst Landpage = (props) => {\r\n\r\n    const [modalInfo, modalChange] = useState({\r\n        modalOpen: false,\r\n        details: null\r\n    })\r\n\r\n    const openSelection = (e) => {\r\n        const selected = e.currentTarget.value;\r\n        const data = props.universities[0].find(x => x._id === selected);\r\n        handleModalOpen(data);\r\n        // modalChange({ ...modalInfo, details: data })\r\n    }\r\n\r\n    const handleModalOpen = (data) => {\r\n        modalChange((prevState) => {\r\n            return {\r\n                modalOpen: !prevState.modalOpen,\r\n                details: data\r\n            }\r\n        })\r\n    }\r\n\r\n    console.log(modalInfo);\r\n\r\n    return (\r\n        (!props.loading ? (\r\n            < Fragment >\r\n                <Fragment>\r\n                    <UniversityView\r\n                        details={modalInfo.details}\r\n                        // selected={this.state.selectedUni}\r\n                        currentState={modalInfo.modalOpen}\r\n                        handleModalOpen={handleModalOpen}>\r\n                    </UniversityView >\r\n                </Fragment>\r\n                < div className=\"container\" >\r\n                    <section className=\"landing\">\r\n                        {props.universities[0].map((obj, index) => {\r\n                            return <button key={index} value={obj._id} onClick={e => { openSelection(e) }}>\r\n                                <div className=\"university\" key={index}>\r\n                                    <div className=\"name\" key={obj._id}>{obj.name}</div>\r\n                                    {obj.scores.map((points) => {\r\n                                        return <div className=\"points\" key={index}> {points.total} </div>\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n                            </button>\r\n                        })}\r\n                    </section>\r\n                </div >\r\n            </Fragment >\r\n        ) : (<div><h1>LOADING</h1></div>))\r\n    )\r\n}\r\n\r\n\r\nLandpage.protoTypes = {\r\n    fetchUni: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.uniFetch.loading,\r\n        universities: state.uniFetch.universities\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Landpage);\r\n"]},"metadata":{},"sourceType":"module"}