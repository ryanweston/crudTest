{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAILURE, LOGIN_SUCCESS, LOGIN_FAILURE, GET_USER, LOGOUT_USER } from '../actions/types'; //Fetches token to mainatain session, store.js deals with issue of having no token and will check \n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: {}\n};\nexport default function (state = initialState, actions) {\n  const {\n    type,\n    payload\n  } = actions;\n\n  switch (type) {\n    case REGISTER_FAILURE:\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        ...payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        ...payload,\n        isAuthenticated: false,\n        loading: true\n      };\n\n    case LOGIN_FAILURE:\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case GET_USER:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        //Handle email server side, privacy issues with email us in state when using google anayltics userID tracking\n        user: {\n          id: payload._id,\n          name: payload.name,\n          university: payload.university,\n          email: payload.email\n        }\n      };\n\n    case LOGOUT_USER:\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/ryanl/Desktop/crudTest/client/src/reducers/register.js"],"names":["REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","GET_USER","LOGOUT_USER","initialState","token","localStorage","getItem","isAuthenticated","loading","user","state","actions","type","payload","id","_id","name","university","email"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,QALJ,EAMIC,WANJ,QAOO,kBAPP,C,CASA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,IAFA;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,OAAhC,EAAyC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,OAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKd,gBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKX,gBAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEH,WAAGG,OAAO,CAACT,KAFR;AAGHG,QAAAA,eAAe,EAAE,IAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKT,aAAL;AAEI,aAAO,EACH,GAAGW,KADA;AAEH,WAAGG,OAFA;AAGHN,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKR,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKP,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,eAAe,EAAE,IAFd;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIH;AACAC,QAAAA,IAAI,EAAE;AACFK,UAAAA,EAAE,EAAED,OAAO,CAACE,GADV;AAEFC,UAAAA,IAAI,EAAEH,OAAO,CAACG,IAFZ;AAGFC,UAAAA,UAAU,EAAEJ,OAAO,CAACI,UAHlB;AAIFC,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAJb;AALH,OAAP;;AAaJ,SAAKhB,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE,KAJN;AAKHC,QAAAA,IAAI,EAAE;AALH,OAAP;;AAOJ;AACI,aAAOC,KAAP;AArDR;AAuDH","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    GET_USER,\r\n    LOGOUT_USER\r\n} from '../actions/types';\r\n\r\n//Fetches token to mainatain session, store.js deals with issue of having no token and will check \r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: {}\r\n};\r\n\r\nexport default function (state = initialState, actions) {\r\n    const { type, payload } = actions;\r\n\r\n    switch (type) {\r\n        case REGISTER_FAILURE:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...payload.token,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: false,\r\n                loading: true,\r\n            }\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            }\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                //Handle email server side, privacy issues with email us in state when using google anayltics userID tracking\r\n                user: {\r\n                    id: payload._id,\r\n                    name: payload.name,\r\n                    university: payload.university,\r\n                    email: payload.email\r\n                }\r\n            }\r\n\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}